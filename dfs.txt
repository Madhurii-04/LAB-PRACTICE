#include <stdio.h>
#include <stdbool.h>

#define MAX_NODES 100  // Maximum number of nodes in the graph

// A utility function for DFS traversal
void depthFirstSearch(int graph[MAX_NODES][MAX_NODES], int n, int start, bool visited[]) {
    // Mark the current node as visited and print it
    visited[start] = true;
    printf("%d ", start);

    // Recur for all the vertices adjacent to this vertex
    for (int neighbor = 0; neighbor < n; neighbor++) {
        if (graph[start][neighbor] && !visited[neighbor]) {
            depthFirstSearch(graph, n, neighbor, visited);
        }
    }
}

int main() {
    int n, e;  // Number of nodes and edges
    int graph[MAX_NODES][MAX_NODES] = {0};  // Adjacency matrix

    // Input the number of nodes and edges
    printf("Enter the number of nodes and edges: ");
    scanf("%d %d", &n, &e);

    // Input the edges
    printf("Enter the edges (u v) where u and v are nodes:\n");
    for (int i = 0; i < e; ++i) {
        int u, v;
        scanf("%d %d", &u, &v);
        graph[u][v] = 1;  // Mark edge from u to v
        graph[v][u] = 1;  // Mark edge from v to u (undirected graph)
    }

    int start;  // Starting node for DFS
    printf("Enter the starting node for DFS: ");
    scanf("%d", &start);

    bool visited[MAX_NODES] = {false};  // Array to track visited nodes

    // Perform DFS
    printf("DFS traversal starting from node %d: ", start);
    depthFirstSearch(graph, n, start, visited);
    printf("\n");

    return 0;
}
